services:
  server:
    build:
      context: .
      target: server
    ports:
      - "5000:5000"
    environment:
      - HOST=0.0.0.0
      - DATABASE_URL=${DATABASE_URL}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
      - UPLOADTHING_TOKEN=${UPLOADTHING_TOKEN}
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET}
      - CORS_URL=${CORS_URL}
      - NODE_ENV=production
    restart: unless-stopped
    networks:
      - app-network

  web:
    build:
      context: .
      target: web
    ports:
      - "3000:3000"
    environment:
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
      - LIVEKIT_API_KEY=${LIVEKIT_API_KEY}
      - LIVEKIT_API_SECRET=${LIVEKIT_API_SECRET}
      - NEXT_PUBLIC_LIVEKIT_URL=${NEXT_PUBLIC_LIVEKIT_URL}
      - UPLOADTHING_TOKEN=${UPLOADTHING_TOKEN}
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET}
      - NEXT_PUBLIC_BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET}
      - CORS_URL=${CORS_URL}
      - NEXT_PUBLIC_CORS_URL=${CORS_URL}
      - NODE_ENV=production
    restart: unless-stopped
    depends_on:
      - server 
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80" 
    build:
      context: .
    depends_on:
      - server
      - web
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
